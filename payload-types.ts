/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    blogs: Blog;
    tags: Tag;
    brands: Brand;
    categories: Category;
    products: Product;
    'product-templates': ProductTemplate;
    'dynamic-products': DynamicProduct;
    'static-products': StaticProduct;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    blogs: BlogsSelect<false> | BlogsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'product-templates': ProductTemplatesSelect<false> | ProductTemplatesSelect<true>;
    'dynamic-products': DynamicProductsSelect<false> | DynamicProductsSelect<true>;
    'static-products': StaticProductsSelect<false> | StaticProductsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  displayName?: string | null;
  /**
   * Contains only lowercase letters, numbers, and dashes.
   */
  username: string;
  imageUrl?: (string | null) | Media;
  role: ('admin' | 'author' | 'user')[];
  emailVerified?: string | null;
  socialLinks?:
    | {
        platform:
          | 'website'
          | 'facebook'
          | 'instagram'
          | 'twitter'
          | 'linkedin'
          | 'youtube'
          | 'tiktok'
          | 'pinterest'
          | 'snapchat'
          | 'reddit'
          | 'tumblr'
          | 'whatsapp'
          | 'telegram'
          | 'github'
          | 'medium'
          | 'quora'
          | 'discord';
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    blogImageSize2?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    blogImageSize3?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  layout?: (HeroType | DetailsType | ListType | FormType | DisqusCommentsType)[] | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  /**
   * Check to covert page as Home Page
   */
  isHome?: boolean | null;
  /**
   * Check to covert page as Dynamic
   */
  isDynamic?: boolean | null;
  /**
   * Choose Generate to create a slug automatically or Custom to set your own slug
   */
  slugMode?: ('generate' | 'custom') | null;
  /**
   * Contains only lowercase letters, numbers, and dashes.
   */
  slug?: string | null;
  /**
   * Choose Generate to create a page-path automatically or Custom to set your own page-path
   */
  pathMode?: ('generate' | 'custom') | null;
  path?: string | null;
  parent?: (string | null) | Page;
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroType".
 */
export interface HeroType {
  heading?: string | null;
  subHeading?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'HeroBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DetailsType".
 */
export interface DetailsType {
  collectionSlug?: ('blogs' | 'tags' | 'users' | 'categories' | 'products') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'DetailsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ListType".
 */
export interface ListType {
  title?: string | null;
  collectionSlug?: ('blogs' | 'tags' | 'users' | 'categories' | 'products') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ListBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormType".
 */
export interface FormType {
  title: string;
  form: {
    relationTo: 'forms';
    value: string | Form;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'FormBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
        | {
            name: string;
            label?: string | null;
            /**
             * Enter the maximum size of each file in MB
             */
            size: number;
            width?: number | null;
            /**
             * Check this box if you want to allow multiple attachments
             */
            multiple: boolean;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'upload';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DisqusCommentsType".
 */
export interface DisqusCommentsType {
  title?: string | null;
  /**
   * To find your Disqus shortname, log into Disqus, access the Admin panel, and check the URL or General Site Settings.
   */
  shortName: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'DisqusComments';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: string;
  /**
   * Upload blog image
   */
  blogImage: string | Media;
  title: string;
  /**
   * Add the summary of the blog post
   */
  description: string;
  tags?:
    | {
        relationTo: 'tags';
        value: string | Tag;
      }[]
    | null;
  author?:
    | {
        relationTo: 'users';
        value: string | User;
      }[]
    | null;
  /**
   * Main content of the blog post. Use the rich text editor for formatting.
   */
  content: {
    [k: string]: unknown;
  }[];
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  /**
   * Contains only lowercase letters, numbers, and dashes.
   */
  slug?: string | null;
  /**
   * Save it as draft to schedule.
   */
  publishOn?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  /**
   * Upload tag image
   */
  tagImage: string | Media;
  title: string;
  description: string;
  color?: ('blue' | 'gray' | 'red' | 'green' | 'yellow' | 'indigo' | 'purple' | 'pink') | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  /**
   * Contains only lowercase letters, numbers, and dashes.
   */
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: string;
  /**
   * The name of the brand. This will be displayed across the application.
   */
  name: string;
  /**
   * SEO-friendly URL for this brand.
   */
  slug: string;
  /**
   * Provide a rich text description to explain this brand.
   */
  description?: string | null;
  /**
   * Upload an image that represents this brand.
   */
  image?: (string | null) | Media;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  /**
   * The name of the category. This will be displayed across the application.
   */
  name: string;
  /**
   * SEO-friendly URL for this category.
   */
  slug: string;
  /**
   * Provide a rich text description to explain this category.
   */
  description?: string | null;
  /**
   * Select the parent category if this category belongs to a hierarchy.
   */
  parentCategory?: (string | null) | Category;
  /**
   * Mark this category as featured to highlight it on the homepage or special sections.
   */
  isFeatured?: boolean | null;
  /**
   * Upload an image that represents this category.
   */
  image: string | Media;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  /**
   * The name of the product that will be displayed.
   */
  name: string;
  /**
   * SEO-friendly URL for this category.
   */
  slug: string;
  /**
   * Provide a rich text description for the product.
   */
  description?: string | null;
  /**
   * The manufacturer or brand of the product.
   */
  brand: string | Brand;
  /**
   * The price of the product before any discounts.
   */
  price: number;
  /**
   * Provide details about any discounts available.
   */
  discount?: {
    /**
     * Discount percentage to be applied.
     */
    percentage?: number | null;
    /**
     * The date when the discount becomes active.
     */
    startDate?: string | null;
    /**
     * The date when the discount ends.
     */
    endDate?: string | null;
  };
  /**
   * The final price of the product after applying discounts.
   */
  finalPrice?: number | null;
  /**
   * The category this product belongs to.
   */
  category: string | Category;
  /**
   * Add tags to help categorize the product.
   */
  tags?:
    | {
        /**
         * A single tag for the product.
         */
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  template?: ('car' | 'mobile' | 'camera' | 'vr') | null;
  carFields?: {
    keySpecifications?: {
      /**
       * Type and capacity of the engine (e.g., 1.5L Turbo Petrol)
       */
      engine?: string | null;
      /**
       * Type of gearbox (e.g., 6-Speed Manual, CVT)
       */
      transmission?: string | null;
      /**
       * Fuel efficiency (e.g., 18 km/l)
       */
      mileage?: string | null;
      /**
       * Type of fuel the car uses (e.g., Petrol, Diesel, Electric)
       */
      fuelType?: string | null;
      /**
       * Number of seats in the car
       */
      seatingCapacity?: string | null;
      /**
       * Type of car (e.g., SUV, Sedan, Hatchback)
       */
      bodyType?: string | null;
    };
    enginePerformance?: {
      /**
       * Engine size in cc (e.g., 1498 cc)
       */
      engineDisplacement?: string | null;
      /**
       * Maximum power output (e.g., 115 bhp @ 6600 rpm)
       */
      power?: string | null;
      /**
       * Maximum torque output (e.g., 145 Nm @ 4600 rpm)
       */
      torque?: string | null;
      /**
       * Number of engine cylinders
       */
      cylinders?: string | null;
      /**
       * Transmission gear count and type
       */
      gearbox?: string | null;
      /**
       * FWD, RWD, or AWD
       */
      driveType?: string | null;
    };
    dimensions?: {
      /**
       * Overall length of the car in mm
       */
      length?: string | null;
      /**
       * Overall width of the car in mm
       */
      width?: string | null;
      /**
       * Overall height of the car in mm
       */
      height?: string | null;
      /**
       * Distance between front and rear axles
       */
      wheelbase?: string | null;
      /**
       * Trunk space in liters
       */
      bootSpace?: string | null;
      /**
       * Distance from ground to chassis
       */
      groundClearance?: string | null;
    };
    features?: {
      /**
       * Type of sunroof (e.g., Panoramic, Electric)
       */
      sunroof?: string | null;
      /**
       * Type of AC (e.g., Manual, Auto Climate Control)
       */
      climateControl?: string | null;
      /**
       * Electrically or manually adjustable seats
       */
      adjustableSeats?: string | null;
      /**
       * Availability of cruise control
       */
      cruiseControl?: string | null;
      /**
       * Keyless push start/stop
       */
      keylessEntry?: string | null;
      /**
       * Power or manual steering
       */
      steeringType?: string | null;
    };
    infotainment?: {
      /**
       * Touchscreen size and type
       */
      touchscreen?: string | null;
      /**
       * Support for Android Auto and Apple CarPlay
       */
      androidAutoAppleCarplay?: string | null;
      /**
       * Number of speakers and audio quality
       */
      speakers?: string | null;
      /**
       * Bluetooth, USB, AUX, Wi-Fi, etc.
       */
      connectivity?: string | null;
    };
    safety?: {
      /**
       * No. and placement of airbags
       */
      airbags?: string | null;
      /**
       * Availability of Anti-lock Braking System
       */
      abs?: string | null;
      /**
       * Traction control system availability
       */
      tractionControl?: string | null;
      /**
       * Parking camera availability
       */
      rearCamera?: string | null;
      /**
       * Front and rear parking sensors
       */
      parkingSensors?: string | null;
      /**
       * Availability of ISOFIX child mounts
       */
      isofix?: string | null;
    };
  };
  mobileFields?: {
    keySpecifications?: {
      /**
       * Processor model used in the device (e.g., Snapdragon 8 Gen 3)
       */
      processor?: string | null;
      /**
       * Main display features like size and type (e.g., 6.7" AMOLED)
       */
      display?: string | null;
      /**
       * Main rear camera setup (e.g., 50MP + 12MP + 10MP)
       */
      rearCamera?: string | null;
      /**
       * Front-facing camera details (e.g., 32MP)
       */
      frontCamera?: string | null;
      /**
       * RAM and internal storage combo (e.g., 8GB | 128GB)
       */
      ramStorage?: string | null;
      /**
       * Battery capacity and charging info (e.g., 5000mAh, 67W Charging)
       */
      battery?: string | null;
      /**
       * Network support details (e.g., 5G, 4G LTE)
       */
      network?: string | null;
      /**
       * Operating system version (e.g., Android 14)
       */
      os?: string | null;
    };
    performance?: {
      /**
       * Processor chipset used (e.g., MediaTek Dimensity 9300)
       */
      chipset?: string | null;
      /**
       * CPU configuration and clock speed (e.g., Octa-core 3.2GHz)
       */
      cpu?: string | null;
      /**
       * Processor architecture (e.g., 64-bit)
       */
      architecture?: string | null;
      /**
       * Fabrication process used (e.g., 4nm)
       */
      fabrication?: string | null;
      /**
       * Installed RAM (e.g., 8GB)
       */
      ram?: string | null;
      /**
       * Type of RAM used (e.g., LPDDR5X)
       */
      ramType?: string | null;
      /**
       * Graphics processor unit (e.g., Adreno 740)
       */
      graphics?: string | null;
    };
    design?: {
      /**
       * Height in mm (e.g., 162.3 mm)
       */
      height?: string | null;
      /**
       * Width in mm (e.g., 75.6 mm)
       */
      width?: string | null;
      /**
       * Thickness in mm (e.g., 8.9 mm)
       */
      thickness?: string | null;
      /**
       * Weight in grams (e.g., 196g)
       */
      weight?: string | null;
      /**
       * Build material (e.g., Glass back, Plastic frame)
       */
      build?: string | null;
      /**
       * Water resistance rating (e.g., IP68)
       */
      waterResistant?: string | null;
      /**
       * Rugged protection features (e.g., MIL-STD-810G)
       */
      ruggedness?: string | null;
      /**
       * Unlock methods supported (e.g., Face Unlock, Fingerprint)
       */
      unlockMethods?: string | null;
      /**
       * Available color variants (e.g., Black, Blue, Red)
       */
      colors?: string | null;
    };
    display?: {
      /**
       * Screen resolution (e.g., 2400 x 1080 pixels)
       */
      resolution?: string | null;
      /**
       * Aspect ratio (e.g., 20:9)
       */
      aspectRatio?: string | null;
      /**
       * Panel type (e.g., AMOLED, IPS LCD)
       */
      type?: string | null;
      /**
       * Screen size in inches (e.g., 6.7")
       */
      size?: string | null;
      /**
       * Whether the display is bezel-less (Yes/No)
       */
      bezelLess?: string | null;
      /**
       * Pixel density in PPI (e.g., 395 PPI)
       */
      pixelDensity?: string | null;
      /**
       * Display protection type (e.g., Gorilla Glass Victus)
       */
      protection?: string | null;
      /**
       * Touchscreen type (e.g., Capacitive)
       */
      touchScreen?: string | null;
      /**
       * Color gamut support (e.g., 1B colors, DCI-P3)
       */
      colorReproduction?: string | null;
      /**
       * Screen refresh rate in Hz (e.g., 120Hz)
       */
      refreshRate?: string | null;
    };
    camera?: {
      /**
       * Details about the rear camera modules and arrangement
       */
      rearSetup?: string | null;
      /**
       * Tech specs like aperture, sensor size, etc.
       */
      rearSpecs?: string | null;
      /**
       * Front camera configuration details
       */
      frontSetup?: string | null;
      /**
       * Specs like aperture and sensor size of front camera
       */
      frontSpecs?: string | null;
      /**
       * Max video resolution rear camera supports (e.g., 4K@60fps)
       */
      videoRear?: string | null;
      /**
       * Max video resolution front camera supports (e.g., 1080p@30fps)
       */
      videoFront?: string | null;
      /**
       * Video recording features (e.g., Slow Motion, HDR)
       */
      videoFeatures?: string | null;
      /**
       * Additional camera features (e.g., Night Mode, AI Scene Detection)
       */
      cameraFeatures?: string | null;
      /**
       * Supported photo modes (e.g., Portrait, Panorama)
       */
      shootingModes?: string | null;
      /**
       * Optical Image Stabilization availability (Yes/No)
       */
      ois?: string | null;
    };
    battery?: {
      /**
       * Battery capacity (e.g., 5000mAh)
       */
      capacity?: string | null;
      /**
       * Battery type (e.g., Li-Po)
       */
      type?: string | null;
      /**
       * Wireless charging supported (Yes/No)
       */
      wirelessCharging?: string | null;
      /**
       * Supports reverse charging (Yes/No)
       */
      reverseCharging?: string | null;
      /**
       * Fast charging support (Yes/No)
       */
      fastCharging?: string | null;
      /**
       * Is battery removable (Yes/No)
       */
      removable?: string | null;
      /**
       * Wattage of charging (e.g., 67W)
       */
      chargingSpeed?: string | null;
    };
    storage?: {
      /**
       * Built-in storage (e.g., 256GB)
       */
      internalMemory?: string | null;
      /**
       * Storage type (e.g., UFS 4.0)
       */
      memoryType?: string | null;
      /**
       * Support for SD card (Yes/No)
       */
      expandable?: string | null;
    };
    software?: {
      /**
       * OS version (e.g., Android 14)
       */
      os?: string | null;
      /**
       * Custom UI on top of OS (e.g., One UI 6)
       */
      customUI?: string | null;
    };
    connectivity?: {
      /**
       * SIM type and configuration (e.g., Dual SIM, Nano-SIM)
       */
      sim?: string | null;
      /**
       * Network bands supported by SIM 1
       */
      sim1Bands?: string | null;
      /**
       * Network bands supported by SIM 2
       */
      sim2Bands?: string | null;
      /**
       * VoLTE supported (Yes/No)
       */
      volte?: string | null;
      /**
       * Wi-Fi version supported (e.g., Wi-Fi 6E)
       */
      wifi?: string | null;
      /**
       * Advanced Wi-Fi features (e.g., Wi-Fi Direct, Hotspot)
       */
      wifiFeatures?: string | null;
      /**
       * Bluetooth version (e.g., v5.3)
       */
      bluetooth?: string | null;
      /**
       * USB port type (e.g., USB Type-C)
       */
      usb?: string | null;
      /**
       * OTG supported (Yes/No)
       */
      otg?: string | null;
      /**
       * NFC support (Yes/No)
       */
      nfc?: string | null;
      /**
       * Infrared blaster available (Yes/No)
       */
      infrared?: string | null;
      /**
       * GPS support and tech (e.g., A-GPS, GLONASS)
       */
      gps?: string | null;
    };
    sensors?: {
      /**
       * Fingerprint sensor type (e.g., In-display, Side-mounted)
       */
      fingerprint?: string | null;
      /**
       * Face unlock supported (Yes/No)
       */
      faceUnlock?: string | null;
      /**
       * Additional sensors (e.g., Accelerometer, Gyroscope, Compass)
       */
      others?: string | null;
    };
  };
  cameraFields?: {
    generalFeature?: {
      /**
       * Type of the camera (e.g., DSLR, Mirrorless)
       */
      cameraType?: string | null;
      /**
       * Full product name and lens kit
       */
      title?: string | null;
      /**
       * Brand of the camera
       */
      brand?: string | null;
    };
    sensor?: {
      /**
       * Image processor model used in the camera
       */
      processorModel?: string | null;
      /**
       * Sensor dimensions (e.g., 23.5 x 15.6 mm)
       */
      sensorSize?: string | null;
      /**
       * Sensor format (e.g., DX, Full Frame)
       */
      imageSensorFormat?: string | null;
      /**
       * Type of sensor (e.g., CMOS, CCD)
       */
      sensorType?: string | null;
      /**
       * Effective megapixel count (e.g., 24 MP)
       */
      effectiveResolution?: string | null;
    };
    lens?: {
      /**
       * Focal length range (e.g., 18-55 mm)
       */
      focalLength?: string | null;
      /**
       * Type of lens (e.g., Zoom, Prime)
       */
      lensType?: string | null;
      /**
       * Lens mount type (e.g., Nikon F)
       */
      mount?: string | null;
      /**
       * Maximum and minimum aperture values
       */
      apertureRange?: string | null;
    };
    video?: {
      /**
       * Video resolution options (e.g., 1080p, 720p)
       */
      resolutionAvailable?: string | null;
      /**
       * Format of recorded video files (e.g., MOV)
       */
      fileFormat?: string | null;
      /**
       * Frame rates supported for different resolutions
       */
      fps?: string | null;
    };
    flash?: {
      /**
       * Effective range of built-in flash
       */
      flashRange?: string | null;
      /**
       * Advanced flash options and controls
       */
      flashFeatures?: string | null;
      /**
       * Availability of external flash mount
       */
      hotShoeMount?: boolean | null;
      /**
       * Whether camera has a built-in flash
       */
      builtInFlash?: boolean | null;
    };
    storage?: {
      /**
       * File system used (e.g., DCF, EXIF)
       */
      fileSystem?: string | null;
      /**
       * Compatible memory card types
       */
      memoryCardType?: string | null;
    };
    otherFeatures?: {
      /**
       * Available shooting scene presets
       */
      sceneModes?: string | null;
      /**
       * Self-timer duration options
       */
      selfTimer?: string | null;
      /**
       * ISO sensitivity range
       */
      iso?: string | null;
      /**
       * White balance modes available
       */
      whiteBalanceType?: string | null;
      /**
       * Autofocus modes supported
       */
      autoFocus?: string | null;
      /**
       * Manual focus support
       */
      manualFocus?: boolean | null;
      /**
       * Touch screen focus control
       */
      touchFocus?: boolean | null;
      /**
       * Whether the camera has in-body stabilization
       */
      imageStabilization?: boolean | null;
      /**
       * Built-in microphone availability
       */
      microphone?: boolean | null;
    };
    exposure?: {
      /**
       * Supported exposure modes (e.g., Auto, Manual)
       */
      exposureModes?: string | null;
    };
    design?: {
      /**
       * Physical size of the camera
       */
      dimensions?: string | null;
      /**
       * Camera weight in grams
       */
      weight?: string | null;
      /**
       * Color variants of the camera
       */
      colorOptions?: string | null;
    };
    previewing?: {
      /**
       * Size of the rear LCD display
       */
      displaySize?: string | null;
      /**
       * Type of optical/electronic viewfinder
       */
      viewfinder?: string | null;
      /**
       * Brightness control levels available
       */
      brightnessAdjustment?: string | null;
      /**
       * Number of dots (resolution) on display
       */
      displayResolution?: string | null;
      /**
       * Whether display is touch-enabled
       */
      touchscreen?: boolean | null;
      /**
       * Whether the display is articulating
       */
      moveableDisplay?: boolean | null;
    };
    connectivity?: {
      /**
       * USB port type and version
       */
      usb?: string | null;
      /**
       * Bluetooth version
       */
      bluetooth?: string | null;
      /**
       * HDMI port type
       */
      hdmi?: string | null;
      /**
       * WiFi version or support
       */
      wifi?: string | null;
      /**
       * NFC support
       */
      nfc?: boolean | null;
    };
    battery?: {
      /**
       * Number of photos per charge
       */
      noOfShots?: string | null;
      /**
       * Battery type or model
       */
      battery?: string | null;
      /**
       * Type of battery (e.g., Li-ion)
       */
      batteryType?: string | null;
    };
  };
  vrFields?: {
    info: {
      /**
       * Brand or company (e.g., Meta)
       */
      manufacturer: string;
      /**
       * Official website (e.g., https://meta.com)
       */
      website?: string | null;
      /**
       * Type of VR device (e.g., Standalone)
       */
      deviceType?: string | null;
      /**
       * Software platform (e.g., Meta Quest)
       */
      platform?: string | null;
      /**
       * Official announcement date
       */
      announced?: string | null;
      /**
       * Public release date
       */
      releaseDate?: string | null;
      /**
       * Pricing info (e.g., $499 with controllers)
       */
      retailPrice?: string | null;
    };
    optics?: {
      /**
       * Lens type (e.g., Pancake lenses)
       */
      lenses?: string | null;
      /**
       * Ocular setup (e.g., Binocular)
       */
      ocularity?: string | null;
      /**
       * Interpupillary distance range (e.g., 58–71 mm)
       */
      ipdRange?: string | null;
      /**
       * Prescription support (e.g., lens inserts)
       */
      adjustableDiopter?: string | null;
      /**
       * Camera passthrough quality (e.g., 18 PPD color)
       */
      passthrough?: string | null;
    };
    display?: {
      /**
       * Panel type (e.g., 2x LCD)
       */
      displayType?: string | null;
      /**
       * Pixel arrangement (e.g., RGB stripe)
       */
      subpixelLayout?: string | null;
      /**
       * Brightness level (if available)
       */
      peakBrightness?: string | null;
      /**
       * Per-eye resolution (e.g., 2064x2208)
       */
      resolution?: string | null;
      /**
       * Maximum refresh rate (e.g., 120Hz)
       */
      refreshRate?: string | null;
      /**
       * Field of View (e.g., 110° horizontal)
       */
      visibleFoV?: string | null;
      /**
       * Software-rendered FoV (if different)
       */
      renderedFoV?: string | null;
      /**
       * Overlap area between eyes (if known)
       */
      binocularOverlap?: string | null;
      /**
       * Average pixels per degree (if known)
       */
      averagePixelDensity?: string | null;
      /**
       * Peak pixels per degree (e.g., 25 PPD)
       */
      peakPixelDensity?: string | null;
      /**
       * Foveated rendering support
       */
      foveatedRendering?: string | null;
    };
    device?: {
      /**
       * Physical dimensions (if available)
       */
      dimensions?: string | null;
      /**
       * Weight with headstrap (e.g., 515g)
       */
      weight?: string | null;
      /**
       * Build materials (e.g., plastic, foam)
       */
      material?: string | null;
      /**
       * Type of headstrap (e.g., fabric)
       */
      headstrap?: string | null;
      /**
       * On-device haptics (if any)
       */
      haptics?: string | null;
      /**
       * Device color options
       */
      colors?: string | null;
      /**
       * Certifications (e.g., CE, FCC)
       */
      compliances?: string | null;
    };
    tracking?: {
      /**
       * 6DoF/inside-out tracking type
       */
      trackingType?: string | null;
      /**
       * Tracking update rate (if known)
       */
      trackingFrequency?: string | null;
      /**
       * External base stations required?
       */
      baseStations?: string | null;
      /**
       * Eye tracking supported?
       */
      eyeTracking?: string | null;
      /**
       * Face tracking supported?
       */
      faceTracking?: string | null;
      /**
       * Hand tracking supported?
       */
      handTracking?: string | null;
      /**
       * Body or leg tracking info
       */
      bodyTracking?: string | null;
    };
    controllers?: {
      /**
       * Type and quantity (e.g., 2x Touch Plus)
       */
      controllers?: string | null;
      /**
       * Weight of controller (if available)
       */
      controllerWeight?: string | null;
      /**
       * Buttons, triggers, sensors included
       */
      inputMethods?: string | null;
      /**
       * Finger/thumb tracking support
       */
      fingerTracking?: string | null;
      /**
       * Controller haptic feedback
       */
      controllerHaptics?: string | null;
      /**
       * Battery type (e.g., AA)
       */
      controllerBatteries?: string | null;
    };
    sound?: {
      /**
       * Speaker configuration (e.g., stereo)
       */
      speakers?: string | null;
      /**
       * Built-in microphone?
       */
      microphone?: string | null;
      /**
       * 3.5mm jack availability
       */
      audioJack?: string | null;
    };
    connectivity?: {
      /**
       * Physical ports (e.g., USB-C)
       */
      ports?: string | null;
      /**
       * Wired video support (e.g., USB-C)
       */
      wiredVideo?: string | null;
      /**
       * Oculus Link support?
       */
      oculusLink?: string | null;
      /**
       * Wireless streaming options (e.g., AirLink)
       */
      wirelessVideo?: string | null;
      /**
       * WiFi version (e.g., 6E)
       */
      wifi?: string | null;
      /**
       * Bluetooth support
       */
      bluetooth?: string | null;
    };
    system?: {
      /**
       * OS (e.g., Android)
       */
      operatingSystem?: string | null;
      /**
       * Chipset (e.g., Snapdragon XR2 Gen 2)
       */
      chipset?: string | null;
      /**
       * CPU details (e.g., Kryo octa-core)
       */
      cpu?: string | null;
      /**
       * GPU (e.g., Adreno 740)
       */
      gpu?: string | null;
      /**
       * RAM size (e.g., 8GB)
       */
      memory?: string | null;
      /**
       * Internal storage (e.g., 128GB)
       */
      storage?: string | null;
      /**
       * SD card support
       */
      sdCardSlot?: string | null;
    };
    battery?: {
      /**
       * Battery size (if available)
       */
      batteryCapacity?: string | null;
      /**
       * Expected usage time (e.g., 2.2 hours)
       */
      batteryLife?: string | null;
      /**
       * Full charge duration (e.g., 2.3 hours)
       */
      chargeTime?: string | null;
      /**
       * Charger spec (e.g., 18W adapter)
       */
      powerAdapter?: string | null;
    };
  };
  /**
   * Upload product images.
   */
  images: (string | Media)[];
  /**
   * Mark this product as a best seller to highlight it prominently.
   */
  isFeatured?: boolean | null;
  /**
   * Mark this product as a new arrival to indicate its recent addition.
   */
  isNewArrival?: boolean | null;
  /**
   * Mark this product as part of a special offer or promotion.
   */
  isSpecialOffer?: boolean | null;
  /**
   * Add flexible sections for additional information such as Product Details, Size & Fit, Material & Care, etc.
   */
  additionalInformationSections?:
    | {
        /**
         * The title of the section (e.g., Product Details, Size & Fit). This will be displayed as the header for each additional information section.
         */
        sectionTitle: string;
        /**
         * Add attribute-value pairs to describe each section (e.g., Product Dimensions, Material, etc.). This content will provide further details under each section.
         */
        sectionContent?:
          | {
              /**
               * The name of the attribute in this section (e.g., Material, Height). This could describe key characteristics of the product.
               */
              attributeName: string;
              /**
               * The value corresponding to the attribute in this section (e.g., Cotton, 12 inches). This will provide specific details for the attribute.
               */
              attributeValue: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-templates".
 */
export interface ProductTemplate {
  id: string;
  name: string;
  fields?:
    | (
        | {
            name: string;
            label: string;
            required: boolean;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label: string;
            required: boolean;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label: string;
            required: boolean;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label: string;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required: boolean;
            id?: string | null;
            blockName?: string | null;
            blockType: 'radio';
          }
        | {
            name: string;
            label: string;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required: boolean;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label: string;
            required: boolean;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dynamic-products".
 */
export interface DynamicProduct {
  id: string;
  productTemplate?: (string | null) | ProductTemplate;
  product?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "static-products".
 */
export interface StaticProduct {
  id: string;
  name: string;
  type: 'car' | 'bike';
  brand?: string | null;
  price?: number | null;
  available?: boolean | null;
  carModel?: string | null;
  carSeats?: number | null;
  fuelType?: ('Petrol' | 'Diesel' | 'Electric' | 'Hybrid') | null;
  transmission?: ('Manual' | 'Automatic') | null;
  bikeType?: ('Cruiser' | 'Sport' | 'Commuter' | 'Electric') | null;
  engineCC?: number | null;
  hasCarrier?: boolean | null;
  electricStart?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        file?: (string | Media)[] | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'blogs';
        value: string | Blog;
      }
    | {
        relationTo: 'tags';
        value: string | Tag;
      }
    | {
        relationTo: 'users';
        value: string | User;
      };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'blogs';
        value: string | Blog;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'brands';
        value: string | Brand;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'product-templates';
        value: string | ProductTemplate;
      } | null)
    | ({
        relationTo: 'dynamic-products';
        value: string | DynamicProduct;
      } | null)
    | ({
        relationTo: 'static-products';
        value: string | StaticProduct;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  displayName?: T;
  username?: T;
  imageUrl?: T;
  role?: T;
  emailVerified?: T;
  socialLinks?:
    | T
    | {
        platform?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        blogImageSize2?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        blogImageSize3?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        HeroBlock?: T | HeroTypeSelect<T>;
        DetailsBlock?: T | DetailsTypeSelect<T>;
        ListBlock?: T | ListTypeSelect<T>;
        FormBlock?: T | FormTypeSelect<T>;
        DisqusComments?: T | DisqusCommentsTypeSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  isHome?: T;
  isDynamic?: T;
  slugMode?: T;
  slug?: T;
  pathMode?: T;
  path?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroType_select".
 */
export interface HeroTypeSelect<T extends boolean = true> {
  heading?: T;
  subHeading?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DetailsType_select".
 */
export interface DetailsTypeSelect<T extends boolean = true> {
  collectionSlug?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ListType_select".
 */
export interface ListTypeSelect<T extends boolean = true> {
  title?: T;
  collectionSlug?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormType_select".
 */
export interface FormTypeSelect<T extends boolean = true> {
  title?: T;
  form?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DisqusCommentsType_select".
 */
export interface DisqusCommentsTypeSelect<T extends boolean = true> {
  title?: T;
  shortName?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs_select".
 */
export interface BlogsSelect<T extends boolean = true> {
  blogImage?: T;
  title?: T;
  description?: T;
  tags?: T;
  author?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  slug?: T;
  publishOn?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  tagImage?: T;
  title?: T;
  description?: T;
  color?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  image?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  parentCategory?: T;
  isFeatured?: T;
  image?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  brand?: T;
  price?: T;
  discount?:
    | T
    | {
        percentage?: T;
        startDate?: T;
        endDate?: T;
      };
  finalPrice?: T;
  category?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  template?: T;
  carFields?:
    | T
    | {
        keySpecifications?:
          | T
          | {
              engine?: T;
              transmission?: T;
              mileage?: T;
              fuelType?: T;
              seatingCapacity?: T;
              bodyType?: T;
            };
        enginePerformance?:
          | T
          | {
              engineDisplacement?: T;
              power?: T;
              torque?: T;
              cylinders?: T;
              gearbox?: T;
              driveType?: T;
            };
        dimensions?:
          | T
          | {
              length?: T;
              width?: T;
              height?: T;
              wheelbase?: T;
              bootSpace?: T;
              groundClearance?: T;
            };
        features?:
          | T
          | {
              sunroof?: T;
              climateControl?: T;
              adjustableSeats?: T;
              cruiseControl?: T;
              keylessEntry?: T;
              steeringType?: T;
            };
        infotainment?:
          | T
          | {
              touchscreen?: T;
              androidAutoAppleCarplay?: T;
              speakers?: T;
              connectivity?: T;
            };
        safety?:
          | T
          | {
              airbags?: T;
              abs?: T;
              tractionControl?: T;
              rearCamera?: T;
              parkingSensors?: T;
              isofix?: T;
            };
      };
  mobileFields?:
    | T
    | {
        keySpecifications?:
          | T
          | {
              processor?: T;
              display?: T;
              rearCamera?: T;
              frontCamera?: T;
              ramStorage?: T;
              battery?: T;
              network?: T;
              os?: T;
            };
        performance?:
          | T
          | {
              chipset?: T;
              cpu?: T;
              architecture?: T;
              fabrication?: T;
              ram?: T;
              ramType?: T;
              graphics?: T;
            };
        design?:
          | T
          | {
              height?: T;
              width?: T;
              thickness?: T;
              weight?: T;
              build?: T;
              waterResistant?: T;
              ruggedness?: T;
              unlockMethods?: T;
              colors?: T;
            };
        display?:
          | T
          | {
              resolution?: T;
              aspectRatio?: T;
              type?: T;
              size?: T;
              bezelLess?: T;
              pixelDensity?: T;
              protection?: T;
              touchScreen?: T;
              colorReproduction?: T;
              refreshRate?: T;
            };
        camera?:
          | T
          | {
              rearSetup?: T;
              rearSpecs?: T;
              frontSetup?: T;
              frontSpecs?: T;
              videoRear?: T;
              videoFront?: T;
              videoFeatures?: T;
              cameraFeatures?: T;
              shootingModes?: T;
              ois?: T;
            };
        battery?:
          | T
          | {
              capacity?: T;
              type?: T;
              wirelessCharging?: T;
              reverseCharging?: T;
              fastCharging?: T;
              removable?: T;
              chargingSpeed?: T;
            };
        storage?:
          | T
          | {
              internalMemory?: T;
              memoryType?: T;
              expandable?: T;
            };
        software?:
          | T
          | {
              os?: T;
              customUI?: T;
            };
        connectivity?:
          | T
          | {
              sim?: T;
              sim1Bands?: T;
              sim2Bands?: T;
              volte?: T;
              wifi?: T;
              wifiFeatures?: T;
              bluetooth?: T;
              usb?: T;
              otg?: T;
              nfc?: T;
              infrared?: T;
              gps?: T;
            };
        sensors?:
          | T
          | {
              fingerprint?: T;
              faceUnlock?: T;
              others?: T;
            };
      };
  cameraFields?:
    | T
    | {
        generalFeature?:
          | T
          | {
              cameraType?: T;
              title?: T;
              brand?: T;
            };
        sensor?:
          | T
          | {
              processorModel?: T;
              sensorSize?: T;
              imageSensorFormat?: T;
              sensorType?: T;
              effectiveResolution?: T;
            };
        lens?:
          | T
          | {
              focalLength?: T;
              lensType?: T;
              mount?: T;
              apertureRange?: T;
            };
        video?:
          | T
          | {
              resolutionAvailable?: T;
              fileFormat?: T;
              fps?: T;
            };
        flash?:
          | T
          | {
              flashRange?: T;
              flashFeatures?: T;
              hotShoeMount?: T;
              builtInFlash?: T;
            };
        storage?:
          | T
          | {
              fileSystem?: T;
              memoryCardType?: T;
            };
        otherFeatures?:
          | T
          | {
              sceneModes?: T;
              selfTimer?: T;
              iso?: T;
              whiteBalanceType?: T;
              autoFocus?: T;
              manualFocus?: T;
              touchFocus?: T;
              imageStabilization?: T;
              microphone?: T;
            };
        exposure?:
          | T
          | {
              exposureModes?: T;
            };
        design?:
          | T
          | {
              dimensions?: T;
              weight?: T;
              colorOptions?: T;
            };
        previewing?:
          | T
          | {
              displaySize?: T;
              viewfinder?: T;
              brightnessAdjustment?: T;
              displayResolution?: T;
              touchscreen?: T;
              moveableDisplay?: T;
            };
        connectivity?:
          | T
          | {
              usb?: T;
              bluetooth?: T;
              hdmi?: T;
              wifi?: T;
              nfc?: T;
            };
        battery?:
          | T
          | {
              noOfShots?: T;
              battery?: T;
              batteryType?: T;
            };
      };
  vrFields?:
    | T
    | {
        info?:
          | T
          | {
              manufacturer?: T;
              website?: T;
              deviceType?: T;
              platform?: T;
              announced?: T;
              releaseDate?: T;
              retailPrice?: T;
            };
        optics?:
          | T
          | {
              lenses?: T;
              ocularity?: T;
              ipdRange?: T;
              adjustableDiopter?: T;
              passthrough?: T;
            };
        display?:
          | T
          | {
              displayType?: T;
              subpixelLayout?: T;
              peakBrightness?: T;
              resolution?: T;
              refreshRate?: T;
              visibleFoV?: T;
              renderedFoV?: T;
              binocularOverlap?: T;
              averagePixelDensity?: T;
              peakPixelDensity?: T;
              foveatedRendering?: T;
            };
        device?:
          | T
          | {
              dimensions?: T;
              weight?: T;
              material?: T;
              headstrap?: T;
              haptics?: T;
              colors?: T;
              compliances?: T;
            };
        tracking?:
          | T
          | {
              trackingType?: T;
              trackingFrequency?: T;
              baseStations?: T;
              eyeTracking?: T;
              faceTracking?: T;
              handTracking?: T;
              bodyTracking?: T;
            };
        controllers?:
          | T
          | {
              controllers?: T;
              controllerWeight?: T;
              inputMethods?: T;
              fingerTracking?: T;
              controllerHaptics?: T;
              controllerBatteries?: T;
            };
        sound?:
          | T
          | {
              speakers?: T;
              microphone?: T;
              audioJack?: T;
            };
        connectivity?:
          | T
          | {
              ports?: T;
              wiredVideo?: T;
              oculusLink?: T;
              wirelessVideo?: T;
              wifi?: T;
              bluetooth?: T;
            };
        system?:
          | T
          | {
              operatingSystem?: T;
              chipset?: T;
              cpu?: T;
              gpu?: T;
              memory?: T;
              storage?: T;
              sdCardSlot?: T;
            };
        battery?:
          | T
          | {
              batteryCapacity?: T;
              batteryLife?: T;
              chargeTime?: T;
              powerAdapter?: T;
            };
      };
  images?: T;
  isFeatured?: T;
  isNewArrival?: T;
  isSpecialOffer?: T;
  additionalInformationSections?:
    | T
    | {
        sectionTitle?: T;
        sectionContent?:
          | T
          | {
              attributeName?: T;
              attributeValue?: T;
              id?: T;
            };
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-templates_select".
 */
export interface ProductTemplatesSelect<T extends boolean = true> {
  name?: T;
  fields?:
    | T
    | {
        text?:
          | T
          | {
              name?: T;
              label?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        radio?:
          | T
          | {
              name?: T;
              label?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dynamic-products_select".
 */
export interface DynamicProductsSelect<T extends boolean = true> {
  productTemplate?: T;
  product?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "static-products_select".
 */
export interface StaticProductsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  brand?: T;
  price?: T;
  available?: T;
  carModel?: T;
  carSeats?: T;
  fuelType?: T;
  transmission?: T;
  bikeType?: T;
  engineCC?: T;
  hasCarrier?: T;
  electricStart?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        upload?:
          | T
          | {
              name?: T;
              label?: T;
              size?: T;
              width?: T;
              multiple?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        file?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: string;
  general: {
    title: string;
    description: string;
    /**
     * We recommend a maximum size of 256 * 256 pixels
     */
    faviconUrl: string | Media;
    /**
     * We recommend a maximum size of 1200 * 630 pixels
     */
    ogImageUrl: string | Media;
    keywords?: string[] | null;
    /**
     * This field is used to format currency values & used as default currency for ecommerce-theme
     */
    currency:
      | 'usd'
      | 'eur'
      | 'inr'
      | 'gbp'
      | 'jpy'
      | 'cad'
      | 'aud'
      | 'chf'
      | 'cny'
      | 'hkd'
      | 'sgd'
      | 'mxn'
      | 'brl'
      | 'rub'
      | 'krw'
      | 'zar'
      | 'try'
      | 'sar'
      | 'aed'
      | 'pln';
  };
  navbar: {
    logo: BrandLogo;
    menuLinks?:
      | {
          /**
           * Check to create group of links
           */
          group?: boolean | null;
          menuLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            /**
             * Upload an svg or logo to be displayed with link
             */
            icon?: (string | null) | Media;
            label: string;
            page?: {
              relationTo: 'pages';
              value: string | Page;
            } | null;
            url?: string | null;
            id?: string | null;
          };
          menuLinkGroup?: {
            groupTitle: string;
            groupLinks?:
              | {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  /**
                   * Upload an svg or logo to be displayed with link
                   */
                  icon?: (string | null) | Media;
                  label: string;
                  page?: {
                    relationTo: 'pages';
                    value: string | Page;
                  } | null;
                  url?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  footer: {
    logo: BrandLogo;
    footerLinks?:
      | {
          /**
           * Check to create group of links
           */
          group?: boolean | null;
          menuLink?: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            /**
             * Upload an svg or logo to be displayed with link
             */
            icon?: (string | null) | Media;
            label: string;
            page?: {
              relationTo: 'pages';
              value: string | Page;
            } | null;
            url?: string | null;
            id?: string | null;
          };
          menuLinkGroup?: {
            groupTitle: string;
            groupLinks?:
              | {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  /**
                   * Upload an svg or logo to be displayed with link
                   */
                  icon?: (string | null) | Media;
                  label: string;
                  page?: {
                    relationTo: 'pages';
                    value: string | Page;
                  } | null;
                  url?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
    socialLinks?:
      | {
          platform:
            | 'website'
            | 'facebook'
            | 'instagram'
            | 'twitter'
            | 'linkedin'
            | 'youtube'
            | 'tiktok'
            | 'pinterest'
            | 'snapchat'
            | 'reddit'
            | 'tumblr'
            | 'whatsapp'
            | 'telegram'
            | 'github'
            | 'medium'
            | 'quora'
            | 'discord';
          value: string;
          id?: string | null;
        }[]
      | null;
    copyright?: string | null;
  };
  redirectionLinks?: {
    /**
     * This redirects to a blog details page
     */
    blogLink?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    /**
     * This redirect to a product details page
     */
    productLink?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    /**
     * This redirects to a author details page
     */
    authorLink?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
    /**
     * This redirects to a tag details page
     */
    tagLink?: {
      relationTo: 'pages';
      value: string | Page;
    } | null;
  };
  monetization?: {
    /**
     * Add the publisher-id from Google AdSense Console
     */
    adSenseId?: string | null;
    /**
     * Add the measurement id from Google Analytics dashboard
     */
    measurementId?: string | null;
  };
  themeSettings: {
    lightMode: {
      background: string;
      foreground: string;
      primary: string;
      primaryForeground: string;
      card: string;
      cardForeground: string;
      popover: string;
      popoverForeground: string;
      secondary: string;
      secondaryForeground: string;
      muted: string;
      mutedForeground: string;
      accent: string;
      accentForeground: string;
      destructive: string;
      destructiveForeground: string;
      border: string;
      input: string;
      ring: string;
    };
    darkMode: {
      background: string;
      foreground: string;
      primary: string;
      primaryForeground: string;
      card: string;
      cardForeground: string;
      popover: string;
      popoverForeground: string;
      secondary: string;
      secondaryForeground: string;
      muted: string;
      mutedForeground: string;
      accent: string;
      accentForeground: string;
      destructive: string;
      destructiveForeground: string;
      border: string;
      input: string;
      ring: string;
    };
    fonts: {
      display: {
        type: 'customFont' | 'googleFont';
        customFont?: (string | null) | Media;
        remoteFont?: string | null;
        fontName?: string | null;
      };
      body: {
        type: 'customFont' | 'googleFont';
        customFont?: (string | null) | Media;
        remoteFont?: string | null;
        fontName?: string | null;
      };
    };
    radius: 'none' | 'small' | 'medium' | 'large' | 'full';
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLogo".
 */
export interface BrandLogo {
  imageUrl: string | Media;
  /**
   * Adjust to the height of the logo
   */
  height?: number | null;
  /**
   * Adjust to the width of the logo
   */
  width?: number | null;
  /**
   * This text appears below the footer image
   */
  description?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  general?:
    | T
    | {
        title?: T;
        description?: T;
        faviconUrl?: T;
        ogImageUrl?: T;
        keywords?: T;
        currency?: T;
      };
  navbar?:
    | T
    | {
        logo?: T | BrandLogoSelect<T>;
        menuLinks?:
          | T
          | {
              group?: T;
              menuLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    icon?: T;
                    label?: T;
                    page?: T;
                    url?: T;
                    id?: T;
                  };
              menuLinkGroup?:
                | T
                | {
                    groupTitle?: T;
                    groupLinks?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          icon?: T;
                          label?: T;
                          page?: T;
                          url?: T;
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  footer?:
    | T
    | {
        logo?: T | BrandLogoSelect<T>;
        footerLinks?:
          | T
          | {
              group?: T;
              menuLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    icon?: T;
                    label?: T;
                    page?: T;
                    url?: T;
                    id?: T;
                  };
              menuLinkGroup?:
                | T
                | {
                    groupTitle?: T;
                    groupLinks?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          icon?: T;
                          label?: T;
                          page?: T;
                          url?: T;
                          id?: T;
                        };
                  };
              id?: T;
            };
        socialLinks?:
          | T
          | {
              platform?: T;
              value?: T;
              id?: T;
            };
        copyright?: T;
      };
  redirectionLinks?:
    | T
    | {
        blogLink?: T;
        productLink?: T;
        authorLink?: T;
        tagLink?: T;
      };
  monetization?:
    | T
    | {
        adSenseId?: T;
        measurementId?: T;
      };
  themeSettings?:
    | T
    | {
        lightMode?:
          | T
          | {
              background?: T;
              foreground?: T;
              primary?: T;
              primaryForeground?: T;
              card?: T;
              cardForeground?: T;
              popover?: T;
              popoverForeground?: T;
              secondary?: T;
              secondaryForeground?: T;
              muted?: T;
              mutedForeground?: T;
              accent?: T;
              accentForeground?: T;
              destructive?: T;
              destructiveForeground?: T;
              border?: T;
              input?: T;
              ring?: T;
            };
        darkMode?:
          | T
          | {
              background?: T;
              foreground?: T;
              primary?: T;
              primaryForeground?: T;
              card?: T;
              cardForeground?: T;
              popover?: T;
              popoverForeground?: T;
              secondary?: T;
              secondaryForeground?: T;
              muted?: T;
              mutedForeground?: T;
              accent?: T;
              accentForeground?: T;
              destructive?: T;
              destructiveForeground?: T;
              border?: T;
              input?: T;
              ring?: T;
            };
        fonts?:
          | T
          | {
              display?:
                | T
                | {
                    type?: T;
                    customFont?: T;
                    remoteFont?: T;
                    fontName?: T;
                  };
              body?:
                | T
                | {
                    type?: T;
                    customFont?: T;
                    remoteFont?: T;
                    fontName?: T;
                  };
            };
        radius?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLogo_select".
 */
export interface BrandLogoSelect<T extends boolean = true> {
  imageUrl?: T;
  height?: T;
  width?: T;
  description?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}